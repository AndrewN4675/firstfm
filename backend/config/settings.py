"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import dj_database_url
from dotenv import load_dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Locate where the .env is
load_dotenv(os.path.join(BASE_DIR, ".env"))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", "")
DJANGO_HOST = os.getenv("DJANGO_HOST", "")
LASTFM_API_KEY = os.getenv("LASTFM_API_KEY", "")
LASTFM_API_SHARED_SECRET = os.getenv("LASTFM_API_SHARED_SECRET", "")
DATABASE_URL = os.getenv("DATABASE_URL", "")
LAST_FM_CALLBACK_URL = f"https://{DJANGO_HOST}/api/lastfm/callback/" # Callback for last.fm to return from auth

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# # For SECURE_SSL_REDIRECT
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")
# 
# # Security stuff
# note: FOR SECURE_SSL_REDIRECT, IF YOU RUN IT LOCALLY ONCE,
# YOU WILL HAVE TO CLEAR BROWSER CACHE AND HISTORY
# TO SET IT BACK TO HTTP!
SECURE_SSL_REDIRECT = True # False for dev 

# CSRF STUFF
CSRF_COOKIE_SECURE = True # Set to true in prod
CSRF_COOKIE_SAMESITE = "none" # Set to none in prod
SESSION_COOKIE_SAMESITE = "none" # set to none in prod
CSRF_USE_SESSIONS = True 
SESSION_COOKIE_SECURE = True # Set to true in prod
SECURE_HSTS_SECONDS = 86400
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

ALLOWED_HOSTS = [
    "firstfm.vercel.app",
     DJANGO_HOST,
    # "localhost",
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'musicRecommendationService',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    # "http://localhost:3000",
    # 'http://127.0.0.1:3000',
    "https://firstfm.vercel.app",
]

CSRF_TRUSTED_ORIGINS = [
    "https://firstfm.vercel.app",
    # "http://localhost:3000",
]

CORS_ALLOW_CREDENTIALS = True

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
# This is so we can insert a database url via an environment variable for production here
if DATABASE_URL:
    DATABASES = {
        'default': dj_database_url.parse(
            os.environ["DATABASE_URL"],
            conn_max_age=60,
        ),
        'OPTIONS': {'sslmode': 'require'},
    }
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "build.sqlite3"
        }
    }

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique_name_wow', 
        'TIMEOUT': 300,                  
        'OPTIONS': {
            'MAX_ENTRIES': 100,       
            'CULL_FREQUENCY': 3,       
        }
    }
}

RATELIMIT_USE_CACHE = 'default'


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
